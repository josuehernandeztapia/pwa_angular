{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-09-26T04:31:57.233Z",
    "end": "2025-09-26T04:32:32.627Z",
    "duration": 35394,
    "testsRegistered": 23,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 21,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "a0fe9a33-8eb0-47d3-9bc4-15cdbace1518",
      "title": "",
      "fullFile": "cypress/e2e/02-dashboard.cy.ts",
      "file": "cypress/e2e/02-dashboard.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d56f43e-9bfa-4749-ae94-4f3777f96e6a",
          "title": "Dashboard Functionality",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "63ce5139-0b85-4152-b699-d786dfbabb40",
              "title": "Dashboard Overview",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load and display dashboard correctly",
                  "fullTitle": "Dashboard Functionality Dashboard Overview should load and display dashboard correctly",
                  "timedOut": null,
                  "duration": 10916,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/02-dashboard.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/02-dashboard.cy.ts/Dashboard Functionality -- Dashboard Overview -- should load and display dashboard correctly (failed).png\"\n      ],\n      [\n        \"/02-dashboard.cy.ts/Dashboard Functionality -- Dashboard Overview -- should load and display dashboard correctly (failed) (attempt 2).png\"\n      ],\n      [\n        \"/02-dashboard.cy.ts/Dashboard Functionality -- should load and display dashboard correctly -- before each hook (failed) (attempt 3).png\"\n      ]\n    ]\n  }\n]",
                  "code": "cy.navigateAndWait('/dashboard');\n// Verify main dashboard elements with enhanced waits\ncy.waitForElement('[data-cy=\"dashboard-header\"]');\ncy.contains('Centro de Comando').should('be.visible');\ncy.contains('Tu plan de acción para hoy').should('be.visible');\n// Verify KPI cards are displayed with enhanced waits\ncy.waitForElement('[data-cy=\"kpi-opportunities\"]');\ncy.waitForElement('[data-cy=\"kpi-contracts\"]');\ncy.waitForElement('[data-cy=\"kpi-revenue\"]');\n// Wait for API calls to complete and ensure idle\ncy.wait('@getDashboardStats');\ncy.wait('@getActivity');\ncy.waitForApiIdle();",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-cy=\"email-input\"]`, but never found it.\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Dashboard Functionality`",
                    "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-cy=\"email-input\"]`, but never found it.\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Dashboard Functionality`\n    at Object.eval [as setup] (webpack://conductores-pwa/./cypress/support/commands.ts:14:7)\n    at Context.<anonymous> (http://localhost:4200/__cypress/runner/cypress_runner.js:136587:38)\n    at getRet (http://localhost:4200/__cypress/runner/cypress_runner.js:120768:20)\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:4200/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:4200/__cypress/runner/cypress_runner.js:120779:66)\n    at Context.then (http://localhost:4200/__cypress/runner/cypress_runner.js:121030:21)\n    at wrapped (http://localhost:4200/__cypress/runner/cypress_runner.js:141618:19)",
                    "diff": null
                  },
                  "uuid": "f0998632-cdf9-4a6b-9260-2c35844438f9",
                  "parentUUID": "63ce5139-0b85-4152-b699-d786dfbabb40",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should display correct KPI values from API",
                  "fullTitle": "Dashboard Functionality Dashboard Overview should display correct KPI values from API",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\ncy.wait('@getDashboardStats');\ncy.waitForApiIdle();\n// Verify KPI values match fixture data with enhanced waits\ncy.waitForElement('[data-cy=\"kpi-opportunities\"]').within(() => {\n    cy.contains('25').should('be.visible'); // 12 + 8 + 5 from fixture\n});\ncy.waitForElement('[data-cy=\"kpi-contracts\"]').within(() => {\n    cy.contains('24').should('be.visible');\n});\ncy.waitForElement('[data-cy=\"kpi-revenue\"]').within(() => {\n    cy.contains('$125,000').should('be.visible');\n    cy.contains('$180,000').should('be.visible'); // projected\n});",
                  "err": {},
                  "uuid": "7a0fab0a-c4c5-4261-bf28-e8f3369e5b3f",
                  "parentUUID": "63ce5139-0b85-4152-b699-d786dfbabb40",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should display activity feed",
                  "fullTitle": "Dashboard Functionality Dashboard Overview should display activity feed",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\ncy.wait('@getActivity');\ncy.waitForApiIdle();\n// Wait for activity feed to load completely\ncy.waitForElement('[data-cy=\"activity-feed\"]');\n// Verify activity items from fixture\ncy.get('[data-cy=\"activity-item\"]').should('have.length.gte', 3);\ncy.contains('Nuevo cliente registrado: Carlos Rodríguez').should('be.visible');\ncy.contains('Pago recibido por $8,500 MXN').should('be.visible');\ncy.contains('Documento INE aprobado').should('be.visible');",
                  "err": {},
                  "uuid": "434293dc-c0ea-4abc-b896-ccec876429ad",
                  "parentUUID": "63ce5139-0b85-4152-b699-d786dfbabb40",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should update market selection",
                  "fullTitle": "Dashboard Functionality Dashboard Overview should update market selection",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\n// Change market selection with enhanced dropdown handling\ncy.selectDropdownOption('market-selector', 'edomex');\n// Should trigger new data request\ncy.wait('@getDashboardStats');\ncy.waitForApiIdle();\n// Verify market selection persists\ncy.waitForElement('[data-cy=\"market-selector\"]').should('have.value', 'edomex');",
                  "err": {},
                  "uuid": "ba2273ee-b65d-44fa-8445-bba6832d75ec",
                  "parentUUID": "63ce5139-0b85-4152-b699-d786dfbabb40",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should handle client mode toggle",
                  "fullTitle": "Dashboard Functionality Dashboard Overview should handle client mode toggle",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\n// Toggle to client mode with enhanced element waiting\ncy.waitForElement('[data-cy=\"client-mode-toggle\"]').click();\n// Verify UI changes for client view\ncy.waitForElement('[data-cy=\"client-mode-indicator\"]').should('contain', 'Cliente');\n// Toggle back to advisor mode\ncy.waitForElement('[data-cy=\"client-mode-toggle\"]').click();\ncy.waitForElement('[data-cy=\"client-mode-indicator\"]').should('contain', 'Asesor');",
                  "err": {},
                  "uuid": "247aceea-c9d4-4050-a333-e512fc8f9536",
                  "parentUUID": "63ce5139-0b85-4152-b699-d786dfbabb40",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "f0998632-cdf9-4a6b-9260-2c35844438f9"
              ],
              "pending": [],
              "skipped": [
                "7a0fab0a-c4c5-4261-bf28-e8f3369e5b3f",
                "434293dc-c0ea-4abc-b896-ccec876429ad",
                "ba2273ee-b65d-44fa-8445-bba6832d75ec",
                "247aceea-c9d4-4050-a333-e512fc8f9536"
              ],
              "duration": 10916,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3d8df332-39df-4e2f-8f81-36708d9e4396",
              "title": "Navigation",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should navigate to clients section",
                  "fullTitle": "Dashboard Functionality Navigation should navigate to clients section",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\n// Navigate using enhanced commands\ncy.waitForElement('[data-cy=\"nav-clients\"]').click();\n// Wait for navigation to complete\ncy.waitForPageLoad('/clientes');\ncy.waitForElement('[data-cy=\"clients-page\"]');",
                  "err": {},
                  "uuid": "8b4cf5c4-4901-4d5a-969a-1445d643eb1b",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should navigate to opportunities pipeline",
                  "fullTitle": "Dashboard Functionality Navigation should navigate to opportunities pipeline",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\n// Navigate with enhanced waiting\ncy.waitForElement('[data-cy=\"opportunities-link\"]').click();\n// Wait for navigation to complete\ncy.waitForPageLoad('/opportunities');",
                  "err": {},
                  "uuid": "ff59b301-09fa-41b0-8f6d-2f289d18d85e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should navigate to specific client from activity feed",
                  "fullTitle": "Dashboard Functionality Navigation should navigate to specific client from activity feed",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\ncy.wait('@getActivity');\ncy.waitForApiIdle();\n// Click on first client activity item with enhanced waiting\ncy.waitForElement('[data-cy=\"activity-item\"]').first().click();\n// Should navigate to client detail\ncy.url().should('include', '/clientes/');",
                  "err": {},
                  "uuid": "68527df8-67f5-4fd8-bd40-33e2fd079cc4",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should open next best action",
                  "fullTitle": "Dashboard Functionality Navigation should open next best action",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\n// Click next action with enhanced waiting\ncy.waitForElement('[data-cy=\"next-action-button\"]').click();\n// Should either navigate to action or open modal\ncy.get('[data-cy=\"action-modal\"]').should('be.visible')\n    .or(cy.url().should('not.equal', '/dashboard'));",
                  "err": {},
                  "uuid": "08dfa593-5c64-4c01-b77c-9b16c5763a6d",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "8b4cf5c4-4901-4d5a-969a-1445d643eb1b",
                "ff59b301-09fa-41b0-8f6d-2f289d18d85e",
                "68527df8-67f5-4fd8-bd40-33e2fd079cc4",
                "08dfa593-5c64-4c01-b77c-9b16c5763a6d"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "196e42d3-24d0-4f1f-a0f1-cd80b034b470",
              "title": "Data States",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle empty dashboard state",
                  "fullTitle": "Dashboard Functionality Data States should handle empty dashboard state",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Mock empty dashboard data\ncy.intercept('GET', '**/api/dashboard/stats', {\n    opportunitiesInPipeline: { nuevas: 0, expediente: 0, aprobado: 0 },\n    pendingActions: { clientsWithMissingDocs: 0, clientsWithGoalsReached: 0 },\n    activeContracts: 0,\n    monthlyRevenue: { collected: 0, projected: 0 }\n}).as('getEmptyStats');\ncy.intercept('GET', '**/api/activity', []).as('getEmptyActivity');\ncy.navigateAndWait('/dashboard');\ncy.wait('@getEmptyStats');\ncy.wait('@getEmptyActivity');\ncy.waitForApiIdle();\n// Verify empty state messaging with enhanced waiting\ncy.waitForElement('[data-cy=\"empty-state\"]');\ncy.contains('No hay datos disponibles').should('be.visible');\n// Verify KPIs show zero values\ncy.get('[data-cy=\"kpi-opportunities\"]').should('contain', '0');\ncy.get('[data-cy=\"kpi-contracts\"]').should('contain', '0');",
                  "err": {},
                  "uuid": "57cdc8fe-8993-410e-b8ad-06153c70870d",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should handle API error gracefully",
                  "fullTitle": "Dashboard Functionality Data States should handle API error gracefully",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Mock API error\ncy.intercept('GET', '**/api/dashboard/stats', {\n    statusCode: 500,\n    body: { error: 'Internal server error' }\n}).as('getErrorStats');\ncy.navigateAndWait('/dashboard');\ncy.wait('@getErrorStats');\ncy.waitForApiIdle();\n// Verify error state is displayed with enhanced waiting\ncy.waitForElement('[data-cy=\"error-state\"]');\ncy.contains('Error al cargar los datos').should('be.visible');\n// Verify retry button is available\ncy.get('[data-cy=\"retry-button\"]').should('be.visible');",
                  "err": {},
                  "uuid": "958e7588-8523-412a-989a-de05aad384e9",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should retry failed requests",
                  "fullTitle": "Dashboard Functionality Data States should retry failed requests",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Mock initial error then success\ncy.intercept('GET', '**/api/dashboard/stats', {\n    statusCode: 500,\n    body: { error: 'Server error' }\n}).as('getErrorStats');\ncy.navigateAndWait('/dashboard');\ncy.wait('@getErrorStats');\ncy.waitForApiIdle();\n// Mock successful retry\ncy.intercept('GET', '**/api/dashboard/stats', {\n    fixture: 'dashboard-stats.json'\n}).as('getRetryStats');\n// Click retry button with enhanced waiting\ncy.waitForElement('[data-cy=\"retry-button\"]').click();\ncy.wait('@getRetryStats');\n// Verify dashboard loads correctly with enhanced waiting\ncy.waitForElement('[data-cy=\"dashboard-header\"]');\ncy.get('[data-cy=\"error-state\"]').should('not.exist');",
                  "err": {},
                  "uuid": "4e70f118-a5ba-4332-9b2f-567bd1901aaa",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should show loading state during data fetch",
                  "fullTitle": "Dashboard Functionality Data States should show loading state during data fetch",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Mock delayed response\ncy.intercept('GET', '**/api/dashboard/stats', (req) => {\n    req.reply((res) => {\n        res.delay(2000);\n        res.send({ fixture: 'dashboard-stats.json' });\n    });\n}).as('getSlowStats');\ncy.navigateAndWait('/dashboard');\n// Verify loading indicators with enhanced waiting\ncy.waitForElement('[data-cy=\"dashboard-loading\"]');\ncy.waitForElement('[data-cy=\"kpi-skeleton\"]');\ncy.wait('@getSlowStats');\n// Verify loading state disappears\ncy.get('[data-cy=\"dashboard-loading\"]').should('not.exist');\ncy.get('[data-cy=\"dashboard-header\"]').should('be.visible');",
                  "err": {},
                  "uuid": "b0b2fa9b-f459-4e33-926b-bf0601883c93",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "57cdc8fe-8993-410e-b8ad-06153c70870d",
                "958e7588-8523-412a-989a-de05aad384e9",
                "4e70f118-a5ba-4332-9b2f-567bd1901aaa",
                "b0b2fa9b-f459-4e33-926b-bf0601883c93"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ed1a563b-8223-41f8-8e4b-4ec1c422509a",
              "title": "Real-time Updates",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update data when notifications arrive",
                  "fullTitle": "Dashboard Functionality Real-time Updates should update data when notifications arrive",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\ncy.wait('@getDashboardStats');\ncy.waitForApiIdle();\n// Simulate real-time notification\ncy.window().trigger('notification', {\n    type: 'new_client',\n    data: { clientId: 'new-client-123' }\n});\n// Should trigger data refresh\ncy.wait('@getDashboardStats');",
                  "err": {},
                  "uuid": "01e02284-4eae-4f4c-af27-dd60e941c5b6",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should show toast notifications for important events",
                  "fullTitle": "Dashboard Functionality Real-time Updates should show toast notifications for important events",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\n// Simulate important event notification\ncy.window().trigger('notification', {\n    type: 'payment_received',\n    message: 'Nuevo pago recibido: $15,000'\n});\n// Verify toast notification appears\ncy.verifyToast('Nuevo pago recibido: $15,000', 'info');",
                  "err": {},
                  "uuid": "b0963bca-ab68-455b-8a81-5d2e55a042a8",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "01e02284-4eae-4f4c-af27-dd60e941c5b6",
                "b0963bca-ab68-455b-8a81-5d2e55a042a8"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e5106f3b-999b-464a-baa3-c7857c62a119",
              "title": "Performance",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load within acceptable time limits",
                  "fullTitle": "Dashboard Functionality Performance should load within acceptable time limits",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const start = Date.now();\ncy.navigateAndWait('/dashboard');\ncy.wait('@getDashboardStats');\ncy.waitForApiIdle();\ncy.then(() => {\n    const loadTime = Date.now() - start;\n    expect(loadTime).to.be.lessThan(3000); // Should load within 3 seconds\n});",
                  "err": {},
                  "uuid": "71377bf6-441a-4a82-965e-cd234e0170b6",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should handle multiple concurrent requests",
                  "fullTitle": "Dashboard Functionality Performance should handle multiple concurrent requests",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\n// Wait for all initial requests to complete\ncy.wait('@getDashboardStats');\ncy.wait('@getActivity');\ncy.waitForApiIdle();\n// Verify all data is displayed correctly with enhanced waits\ncy.waitForElement('[data-cy=\"kpi-opportunities\"]');\ncy.waitForElement('[data-cy=\"activity-feed\"]');",
                  "err": {},
                  "uuid": "8ef9a615-9010-4c95-a214-3a1c48d477c0",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "71377bf6-441a-4a82-965e-cd234e0170b6",
                "8ef9a615-9010-4c95-a214-3a1c48d477c0"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f6939b2e-87ca-40aa-8c0b-0731bb82c89e",
              "title": "Accessibility",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be fully accessible",
                  "fullTitle": "Dashboard Functionality Accessibility should be fully accessible",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\ncy.waitForLoadComplete();\n// Check overall accessibility with enhanced waiting\ncy.checkA11y();",
                  "err": {},
                  "uuid": "4b488011-1cbd-47cc-9a46-59ab259495b4",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should support keyboard navigation",
                  "fullTitle": "Dashboard Functionality Accessibility should support keyboard navigation",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\ncy.waitForLoadComplete();\n// Test keyboard navigation through interactive elements\ncy.get('body').tab();\ncy.focused().should('be.visible');\n// Continue tabbing through focusable elements\nfor (let i = 0; i < 10; i++) {\n    cy.focused().tab();\n    cy.focused().should('be.visible');\n}",
                  "err": {},
                  "uuid": "2c53bc04-47cf-4744-9c6e-a5b34ff7a741",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should have proper ARIA labels and roles",
                  "fullTitle": "Dashboard Functionality Accessibility should have proper ARIA labels and roles",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.navigateAndWait('/dashboard');\ncy.waitForLoadComplete();\n// Verify main landmarks\ncy.get('[role=\"main\"]').should('exist');\ncy.get('[role=\"navigation\"]').should('exist');\n// Verify KPI cards have appropriate labels\ncy.get('[data-cy=\"kpi-opportunities\"]').should('have.attr', 'aria-label');\ncy.get('[data-cy=\"kpi-contracts\"]').should('have.attr', 'aria-label');\n// Verify activity feed is properly labeled\ncy.get('[data-cy=\"activity-feed\"]').should('have.attr', 'aria-label');",
                  "err": {},
                  "uuid": "067d43b6-3cf4-4dd2-a946-191c641df34f",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "4b488011-1cbd-47cc-9a46-59ab259495b4",
                "2c53bc04-47cf-4744-9c6e-a5b34ff7a741",
                "067d43b6-3cf4-4dd2-a946-191c641df34f"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "49f76f08-70d1-40d5-882f-f19fcbe2bafa",
              "title": "Responsive Design",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display correctly on mobile",
                  "fullTitle": "Dashboard Functionality Responsive Design should display correctly on mobile",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.viewport(width, height);\ncy.navigateAndWait('/dashboard');\n// Verify essential elements are visible with enhanced waits\ncy.waitForElement('[data-cy=\"dashboard-header\"]');\ncy.waitForElement('[data-cy=\"kpi-opportunities\"]');\ncy.waitForElement('[data-cy=\"activity-feed\"]');\nif (name === 'mobile') {\n    // Mobile-specific checks with enhanced waiting\n    cy.waitForElement('[data-cy=\"mobile-menu\"]');\n}\nelse {\n    // Desktop/tablet checks with enhanced waiting\n    cy.waitForElement('[data-cy=\"sidebar-nav\"]');\n}",
                  "err": {},
                  "uuid": "19534a54-1194-43c8-9e1e-f6e97bd94a6b",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should display correctly on tablet",
                  "fullTitle": "Dashboard Functionality Responsive Design should display correctly on tablet",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.viewport(width, height);\ncy.navigateAndWait('/dashboard');\n// Verify essential elements are visible with enhanced waits\ncy.waitForElement('[data-cy=\"dashboard-header\"]');\ncy.waitForElement('[data-cy=\"kpi-opportunities\"]');\ncy.waitForElement('[data-cy=\"activity-feed\"]');\nif (name === 'mobile') {\n    // Mobile-specific checks with enhanced waiting\n    cy.waitForElement('[data-cy=\"mobile-menu\"]');\n}\nelse {\n    // Desktop/tablet checks with enhanced waiting\n    cy.waitForElement('[data-cy=\"sidebar-nav\"]');\n}",
                  "err": {},
                  "uuid": "56a0b194-e1c0-4570-bcbe-44ff8ccc0c04",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should display correctly on desktop",
                  "fullTitle": "Dashboard Functionality Responsive Design should display correctly on desktop",
                  "timedOut": null,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.viewport(width, height);\ncy.navigateAndWait('/dashboard');\n// Verify essential elements are visible with enhanced waits\ncy.waitForElement('[data-cy=\"dashboard-header\"]');\ncy.waitForElement('[data-cy=\"kpi-opportunities\"]');\ncy.waitForElement('[data-cy=\"activity-feed\"]');\nif (name === 'mobile') {\n    // Mobile-specific checks with enhanced waiting\n    cy.waitForElement('[data-cy=\"mobile-menu\"]');\n}\nelse {\n    // Desktop/tablet checks with enhanced waiting\n    cy.waitForElement('[data-cy=\"sidebar-nav\"]');\n}",
                  "err": {
                    "message": "CypressError: `cy.task('coverageReport')` failed with the following error:\n\n> Command failed with exit code 1: npm run coverage:report\n\nhttps://on.cypress.io/api/task\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail",
                    "estack": "CypressError: `cy.task('coverageReport')` failed with the following error:\n\n> Command failed with exit code 1: npm run coverage:report\n\nhttps://on.cypress.io/api/task\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail\n    at <unknown> (http://localhost:4200/__cypress/runner/cypress_runner.js:138627:70)\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.generateReport (webpack://conductores-pwa/./node_modules/@cypress/code-coverage/support.js:263:0)\n\nFrom Node.js Internals:\n  Error: Command failed with exit code 1: npm run coverage:report\n      at makeError (/workspace/node_modules/@cypress/code-coverage/node_modules/execa/lib/error.js:59:11)\n      at handlePromise (/workspace/node_modules/@cypress/code-coverage/node_modules/execa/index.js:114:26)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                    "diff": null
                  },
                  "uuid": "0899ad21-f4e9-49b2-806e-064434c9de1d",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "0899ad21-f4e9-49b2-806e-064434c9de1d"
              ],
              "pending": [],
              "skipped": [
                "19534a54-1194-43c8-9e1e-f6e97bd94a6b",
                "56a0b194-e1c0-4570-bcbe-44ff8ccc0c04"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "reportPageTitle": "Conductores PWA E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "reportDir": "cypress/reports/html/.jsons",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}