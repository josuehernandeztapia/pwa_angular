{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-09-26T04:33:53.745Z",
    "end": "2025-09-26T04:34:29.281Z",
    "duration": 35536,
    "testsRegistered": 25,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 23,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "9ffe3dcb-1f1c-49d6-b0a4-5a52f9a3c70e",
      "title": "",
      "fullFile": "cypress/e2e/05-document-workflow.cy.ts",
      "file": "cypress/e2e/05-document-workflow.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2cb3cd2a-4760-43cc-ad6a-9ec769038748",
          "title": "Document Workflow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "456a01d0-75d3-4379-8f16-5eeffac5d117",
              "title": "Document Requirements",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display document requirements for client",
                  "fullTitle": "Document Workflow Document Requirements should display document requirements for client",
                  "timedOut": null,
                  "duration": 10986,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": "[\n  {\n    \"title\": \"cypress-mochawesome-reporter-videos-failed\",\n    \"value\": \"cypress/e2e/05-document-workflow.cy.ts\"\n  },\n  {\n    \"title\": \"cypress-mochawesome-reporter-screenshots\",\n    \"value\": [\n      [\n        \"/05-document-workflow.cy.ts/Document Workflow -- Document Requirements -- should display document requirements for client (failed).png\"\n      ],\n      [\n        \"/05-document-workflow.cy.ts/Document Workflow -- Document Requirements -- should display document requirements for client (failed) (attempt 2).png\"\n      ],\n      [\n        \"/05-document-workflow.cy.ts/Document Workflow -- should display document requirements for client -- before each hook (failed) (attempt 3).png\"\n      ]\n    ]\n  }\n]",
                  "code": "cy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.wait('@getDocumentRequirements');\ncy.get('[data-cy=\"documents-page\"]').should('be.visible');\ncy.contains('Documentos Requeridos').should('be.visible');\n// Verify required documents list\ncy.get('[data-cy=\"required-doc\"]').should('have.length.gte', 3);\n// Verify document statuses\ncy.get('[data-cy=\"doc-ine\"]').within(() => {\n    cy.get('[data-cy=\"doc-status\"]').should('contain', 'Aprobado');\n    cy.get('[data-cy=\"doc-icon\"]').should('have.class', 'approved');\n});\ncy.get('[data-cy=\"doc-domicilio\"]').within(() => {\n    cy.get('[data-cy=\"doc-status\"]').should('contain', 'Pendiente');\n    cy.get('[data-cy=\"upload-button\"]').should('be.visible');\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-cy=\"email-input\"]`, but never found it.\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Document Workflow`",
                    "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-cy=\"email-input\"]`, but never found it.\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Document Workflow`\n    at Object.eval [as setup] (webpack://conductores-pwa/./cypress/support/commands.ts:14:7)\n    at Context.<anonymous> (http://localhost:4200/__cypress/runner/cypress_runner.js:136587:38)\n    at getRet (http://localhost:4200/__cypress/runner/cypress_runner.js:120768:20)\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:4200/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:4200/__cypress/runner/cypress_runner.js:120779:66)\n    at Context.then (http://localhost:4200/__cypress/runner/cypress_runner.js:121030:21)\n    at wrapped (http://localhost:4200/__cypress/runner/cypress_runner.js:141618:19)",
                    "diff": null
                  },
                  "uuid": "db35d393-5b22-4c77-8e6e-c9c5dbe9703f",
                  "parentUUID": "456a01d0-75d3-4379-8f16-5eeffac5d117",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show document tooltips and help",
                  "fullTitle": "Document Workflow Document Requirements should show document tooltips and help",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\n// Hover over help icon\ncy.get('[data-cy=\"doc-domicilio\"]').find('[data-cy=\"help-icon\"]').trigger('mouseover');\n// Verify tooltip appears\ncy.get('[data-cy=\"doc-tooltip\"]').should('be.visible');\ncy.contains('Recibo de luz, agua o teléfono no mayor a 3 meses').should('be.visible');",
                  "err": {},
                  "uuid": "9edd431a-9e51-4329-bdcb-ca41bc28aafb",
                  "parentUUID": "456a01d0-75d3-4379-8f16-5eeffac5d117",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should filter documents by status",
                  "fullTitle": "Document Workflow Document Requirements should filter documents by status",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\n// Filter by pending documents\ncy.get('[data-cy=\"status-filter\"]').select('pendiente');\ncy.get('[data-cy=\"required-doc\"]').each($doc => {\n    cy.wrap($doc).find('[data-cy=\"doc-status\"]').should('contain', 'Pendiente');\n});\n// Filter by approved documents\ncy.get('[data-cy=\"status-filter\"]').select('aprobado');\ncy.get('[data-cy=\"required-doc\"]').each($doc => {\n    cy.wrap($doc).find('[data-cy=\"doc-status\"]').should('contain', 'Aprobado');\n});",
                  "err": {},
                  "uuid": "d44cb06d-08d9-40d7-92c2-e4eea952c535",
                  "parentUUID": "456a01d0-75d3-4379-8f16-5eeffac5d117",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "db35d393-5b22-4c77-8e6e-c9c5dbe9703f"
              ],
              "pending": [],
              "skipped": [
                "9edd431a-9e51-4329-bdcb-ca41bc28aafb",
                "d44cb06d-08d9-40d7-92c2-e4eea952c535"
              ],
              "duration": 10986,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2b5ac954-68c1-490e-8dbf-af47d1873097",
              "title": "Document Upload",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should upload document successfully",
                  "fullTitle": "Document Workflow Document Upload should upload document successfully",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', '**/api/clients/client-001/documents/upload', {\n    statusCode: 200,\n    body: {\n        id: 'doc-004',\n        name: 'Comprobante de domicilio',\n        status: 'En Revisión',\n        uploadedAt: '2024-02-03T16:30:00Z',\n        fileName: 'comprobante-domicilio.pdf',\n        fileSize: 1024768\n    }\n}).as('uploadDocument');\ncy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\n// Click upload button for pending document\ncy.get('[data-cy=\"doc-domicilio\"]').find('[data-cy=\"upload-button\"]').click();\ncy.get('[data-cy=\"upload-modal\"]').should('be.visible');\n// Select document type\ncy.get('[data-cy=\"document-type\"]').select('comprobante-domicilio');\n// Upload file\nconst fileName = 'comprobante-domicilio.pdf';\ncy.fixture(fileName, 'binary')\n    .then(Cypress.Blob.binaryStringToBlob)\n    .then(fileContent => {\n    cy.get('[data-cy=\"file-input\"]').selectFile({\n        contents: fileContent,\n        fileName,\n        mimeType: 'application/pdf'\n    });\n});\n// Verify file is selected\ncy.get('[data-cy=\"selected-file\"]').should('contain', fileName);\ncy.get('[data-cy=\"file-size\"]').should('be.visible');\n// Add optional notes\ncy.get('[data-cy=\"upload-notes\"]').type('Recibo de CFE del mes actual');\ncy.get('[data-cy=\"upload-submit\"]').click();\ncy.wait('@uploadDocument');\ncy.verifyToast('Documento subido exitosamente', 'success');\n// Modal should close and document status should update\ncy.get('[data-cy=\"upload-modal\"]').should('not.exist');\ncy.get('[data-cy=\"doc-domicilio\"]').find('[data-cy=\"doc-status\"]').should('contain', 'En Revisión');",
                  "err": {},
                  "uuid": "f9ed0707-4625-42db-9515-4d6ef2c1a969",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should validate file type and size",
                  "fullTitle": "Document Workflow Document Upload should validate file type and size",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.get('[data-cy=\"doc-domicilio\"]').find('[data-cy=\"upload-button\"]').click();\n// Try uploading invalid file type\ncy.fixture('invalid-document.txt', 'binary')\n    .then(Cypress.Blob.binaryStringToBlob)\n    .then(fileContent => {\n    cy.get('[data-cy=\"file-input\"]').selectFile({\n        contents: fileContent,\n        fileName: 'invalid-document.txt',\n        mimeType: 'text/plain'\n    });\n});\ncy.get('[data-cy=\"file-error\"]').should('contain', 'Tipo de archivo no válido');\ncy.get('[data-cy=\"upload-submit\"]').should('be.disabled');",
                  "err": {},
                  "uuid": "36efcb69-9b34-4e29-bd97-ddb01108c741",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should handle upload errors gracefully",
                  "fullTitle": "Document Workflow Document Upload should handle upload errors gracefully",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', '**/api/clients/client-001/documents/upload', {\n    statusCode: 400,\n    body: { error: 'El archivo es demasiado grande' }\n}).as('uploadError');\ncy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.get('[data-cy=\"doc-domicilio\"]').find('[data-cy=\"upload-button\"]').click();\nconst fileName = 'large-document.pdf';\ncy.fixture(fileName, 'binary')\n    .then(Cypress.Blob.binaryStringToBlob)\n    .then(fileContent => {\n    cy.get('[data-cy=\"file-input\"]').selectFile({\n        contents: fileContent,\n        fileName,\n        mimeType: 'application/pdf'\n    });\n});\ncy.get('[data-cy=\"upload-submit\"]').click();\ncy.wait('@uploadError');\ncy.get('[data-cy=\"upload-error\"]').should('contain', 'El archivo es demasiado grande');",
                  "err": {},
                  "uuid": "2c685aaa-413b-4bac-99aa-82dda99aa7bd",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should show upload progress",
                  "fullTitle": "Document Workflow Document Upload should show upload progress",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Mock delayed upload with progress\ncy.intercept('POST', '**/api/clients/client-001/documents/upload', (req) => {\n    req.reply((res) => {\n        res.delay(2000);\n        res.send({\n            statusCode: 200,\n            body: { success: true }\n        });\n    });\n}).as('slowUpload');\ncy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.get('[data-cy=\"doc-domicilio\"]').find('[data-cy=\"upload-button\"]').click();\nconst fileName = 'comprobante-domicilio.pdf';\ncy.fixture(fileName, 'binary')\n    .then(Cypress.Blob.binaryStringToBlob)\n    .then(fileContent => {\n    cy.get('[data-cy=\"file-input\"]').selectFile({\n        contents: fileContent,\n        fileName,\n        mimeType: 'application/pdf'\n    });\n});\ncy.get('[data-cy=\"upload-submit\"]').click();\n// Verify progress indicators\ncy.get('[data-cy=\"upload-progress\"]').should('be.visible');\ncy.get('[data-cy=\"upload-spinner\"]').should('be.visible');\ncy.get('[data-cy=\"upload-submit\"]').should('be.disabled');\ncy.wait('@slowUpload');",
                  "err": {},
                  "uuid": "6d8f2a68-8714-45cd-9a47-27ea7e1a6336",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should support drag and drop upload",
                  "fullTitle": "Document Workflow Document Upload should support drag and drop upload",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.get('[data-cy=\"doc-domicilio\"]').find('[data-cy=\"upload-button\"]').click();\n// Test drag and drop zone\ncy.get('[data-cy=\"drop-zone\"]').should('be.visible');\ncy.contains('Arrastra el archivo aquí o haz clic para seleccionar').should('be.visible');\n// Simulate drag enter\ncy.get('[data-cy=\"drop-zone\"]').trigger('dragenter');\ncy.get('[data-cy=\"drop-zone\"]').should('have.class', 'drag-over');\n// Simulate drag leave\ncy.get('[data-cy=\"drop-zone\"]').trigger('dragleave');\ncy.get('[data-cy=\"drop-zone\"]').should('not.have.class', 'drag-over');",
                  "err": {},
                  "uuid": "05edb097-61c4-4527-b552-0d89a6e46581",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "f9ed0707-4625-42db-9515-4d6ef2c1a969",
                "36efcb69-9b34-4e29-bd97-ddb01108c741",
                "2c685aaa-413b-4bac-99aa-82dda99aa7bd",
                "6d8f2a68-8714-45cd-9a47-27ea7e1a6336",
                "05edb097-61c4-4527-b552-0d89a6e46581"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "342b7f71-76ed-4dfb-8e63-f84169fe3967",
              "title": "Document Review and Approval",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display documents pending review",
                  "fullTitle": "Document Workflow Document Review and Approval should display documents pending review",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/documentos/revision');\ncy.waitForAngular();\ncy.intercept('GET', '**/api/documents/pending-review', {\n    fixture: 'documents-pending-review.json'\n}).as('getPendingDocuments');\ncy.wait('@getPendingDocuments');\ncy.get('[data-cy=\"review-queue\"]').should('be.visible');\ncy.contains('Documentos Pendientes de Revisión').should('be.visible');\n// Verify document cards\ncy.get('[data-cy=\"review-doc\"]').should('have.length.gte', 1);\ncy.get('[data-cy=\"review-doc\"]').first().within(() => {\n    cy.get('[data-cy=\"client-name\"]').should('be.visible');\n    cy.get('[data-cy=\"document-type\"]').should('be.visible');\n    cy.get('[data-cy=\"upload-date\"]').should('be.visible');\n    cy.get('[data-cy=\"review-buttons\"]').should('be.visible');\n});",
                  "err": {},
                  "uuid": "f6cd1444-8ab5-431b-a7cc-607044240e3d",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should approve document successfully",
                  "fullTitle": "Document Workflow Document Review and Approval should approve document successfully",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('PUT', '**/api/documents/doc-004/approve', {\n    statusCode: 200,\n    body: { success: true, status: 'approved' }\n}).as('approveDocument');\ncy.visit('/documentos/revision');\ncy.waitForAngular();\ncy.get('[data-cy=\"review-doc\"]').first().find('[data-cy=\"approve-button\"]').click();\ncy.get('[data-cy=\"approval-modal\"]').should('be.visible');\ncy.get('[data-cy=\"approval-notes\"]').type('Documento válido y legible');\ncy.get('[data-cy=\"confirm-approval\"]').click();\ncy.wait('@approveDocument');\ncy.verifyToast('Documento aprobado', 'success');\n// Document should be removed from review queue\ncy.get('[data-cy=\"review-doc\"]').should('have.length.lessThan', 3);",
                  "err": {},
                  "uuid": "142d5a53-20f0-4fe4-87e7-4b1dfcc6d17a",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should reject document with reason",
                  "fullTitle": "Document Workflow Document Review and Approval should reject document with reason",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('PUT', '**/api/documents/doc-004/reject', {\n    statusCode: 200,\n    body: { success: true, status: 'rejected' }\n}).as('rejectDocument');\ncy.visit('/documentos/revision');\ncy.waitForAngular();\ncy.get('[data-cy=\"review-doc\"]').first().find('[data-cy=\"reject-button\"]').click();\ncy.get('[data-cy=\"rejection-modal\"]').should('be.visible');\ncy.get('[data-cy=\"rejection-reason\"]').select('illegible');\ncy.get('[data-cy=\"rejection-notes\"]').type('La imagen está borrosa y no se puede leer');\ncy.get('[data-cy=\"confirm-rejection\"]').click();\ncy.wait('@rejectDocument');\ncy.verifyToast('Documento rechazado', 'info');",
                  "err": {},
                  "uuid": "b700ec26-0528-45b0-89bb-6146d7308a2b",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should request additional information",
                  "fullTitle": "Document Workflow Document Review and Approval should request additional information",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('PUT', '**/api/documents/doc-004/request-info', {\n    statusCode: 200,\n    body: { success: true, status: 'info_requested' }\n}).as('requestInfo');\ncy.visit('/documentos/revision');\ncy.waitForAngular();\ncy.get('[data-cy=\"review-doc\"]').first().find('[data-cy=\"request-info-button\"]').click();\ncy.get('[data-cy=\"info-request-modal\"]').should('be.visible');\ncy.get('[data-cy=\"info-request-message\"]').type('Por favor suba una imagen más clara del INE');\ncy.get('[data-cy=\"confirm-request\"]').click();\ncy.wait('@requestInfo');\ncy.verifyToast('Información solicitada', 'info');",
                  "err": {},
                  "uuid": "24e91dbe-6637-4c3a-803b-2095f9a1c964",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should view document details and preview",
                  "fullTitle": "Document Workflow Document Review and Approval should view document details and preview",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/documentos/revision');\ncy.waitForAngular();\ncy.get('[data-cy=\"review-doc\"]').first().find('[data-cy=\"view-document\"]').click();\ncy.get('[data-cy=\"document-viewer\"]').should('be.visible');\ncy.get('[data-cy=\"document-image\"]').should('be.visible');\n// Test zoom functionality\ncy.get('[data-cy=\"zoom-in\"]').click();\ncy.get('[data-cy=\"document-image\"]').should('have.css', 'transform').and('contain', 'scale');\ncy.get('[data-cy=\"zoom-out\"]').click();\n// Test rotation\ncy.get('[data-cy=\"rotate-document\"]').click();\ncy.get('[data-cy=\"document-image\"]').should('have.css', 'transform').and('contain', 'rotate');",
                  "err": {},
                  "uuid": "ff3a8d76-7059-4776-a4fb-800e33044a25",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should bulk approve multiple documents",
                  "fullTitle": "Document Workflow Document Review and Approval should bulk approve multiple documents",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('PUT', '**/api/documents/bulk-approve', {\n    statusCode: 200,\n    body: { success: true, approved: 3 }\n}).as('bulkApprove');\ncy.visit('/documentos/revision');\ncy.waitForAngular();\n// Select multiple documents\ncy.get('[data-cy=\"doc-checkbox\"]').first().check();\ncy.get('[data-cy=\"doc-checkbox\"]').eq(1).check();\ncy.get('[data-cy=\"doc-checkbox\"]').eq(2).check();\ncy.get('[data-cy=\"bulk-actions\"]').should('be.visible');\ncy.get('[data-cy=\"bulk-approve\"]').click();\ncy.get('[data-cy=\"bulk-approval-modal\"]').should('be.visible');\ncy.get('[data-cy=\"bulk-notes\"]').type('Documentos aprobados en lote');\ncy.get('[data-cy=\"confirm-bulk-approval\"]').click();\ncy.wait('@bulkApprove');\ncy.verifyToast('3 documentos aprobados', 'success');",
                  "err": {},
                  "uuid": "648ed920-a316-40fa-825c-7ed464cd5422",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "f6cd1444-8ab5-431b-a7cc-607044240e3d",
                "142d5a53-20f0-4fe4-87e7-4b1dfcc6d17a",
                "b700ec26-0528-45b0-89bb-6146d7308a2b",
                "24e91dbe-6637-4c3a-803b-2095f9a1c964",
                "ff3a8d76-7059-4776-a4fb-800e33044a25",
                "648ed920-a316-40fa-825c-7ed464cd5422"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c491f32e-1474-4c8e-a559-9f7ac96dad87",
              "title": "Document History and Tracking",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display document history",
                  "fullTitle": "Document Workflow Document History and Tracking should display document history",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/clientes/client-001/documentos/doc-001/historial');\ncy.waitForAngular();\ncy.intercept('GET', '**/api/documents/doc-001/history', {\n    fixture: 'document-history.json'\n}).as('getDocumentHistory');\ncy.wait('@getDocumentHistory');\ncy.get('[data-cy=\"document-history\"]').should('be.visible');\ncy.contains('Historial del Documento').should('be.visible');\n// Verify timeline events\ncy.get('[data-cy=\"history-event\"]').should('have.length.gte', 3);\ncy.get('[data-cy=\"history-event\"]').first().within(() => {\n    cy.get('[data-cy=\"event-date\"]').should('be.visible');\n    cy.get('[data-cy=\"event-actor\"]').should('be.visible');\n    cy.get('[data-cy=\"event-description\"]').should('be.visible');\n});",
                  "err": {},
                  "uuid": "0e51693b-f924-4b43-8748-46396dc90999",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should track document versions",
                  "fullTitle": "Document Workflow Document History and Tracking should track document versions",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/clientes/client-001/documentos/doc-001');\ncy.waitForAngular();\ncy.intercept('GET', '**/api/documents/doc-001/versions', {\n    fixture: 'document-versions.json'\n}).as('getDocumentVersions');\ncy.wait('@getDocumentVersions');\ncy.get('[data-cy=\"document-versions\"]').should('be.visible');\n// Verify version list\ncy.get('[data-cy=\"version-item\"]').should('have.length.gte', 2);\n// Should show current version\ncy.get('[data-cy=\"current-version\"]').should('contain', 'Versión Actual');\n// Test version comparison\ncy.get('[data-cy=\"compare-versions\"]').click();\ncy.get('[data-cy=\"version-comparison\"]').should('be.visible');",
                  "err": {},
                  "uuid": "e34b7404-9f96-4ad2-bbf8-42db080950df",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should download document",
                  "fullTitle": "Document Workflow Document History and Tracking should download document",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('GET', '**/api/documents/doc-001/download', {\n    statusCode: 200,\n    headers: {\n        'Content-Type': 'application/pdf',\n        'Content-Disposition': 'attachment; filename=\"INE_Juan_Perez.pdf\"'\n    }\n}).as('downloadDocument');\ncy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.get('[data-cy=\"doc-ine\"]').find('[data-cy=\"download-button\"]').click();\ncy.wait('@downloadDocument');\ncy.verifyToast('Descarga iniciada', 'info');",
                  "err": {},
                  "uuid": "f3efc82e-813f-4035-9e80-6616893bdfc1",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "0e51693b-f924-4b43-8748-46396dc90999",
                "e34b7404-9f96-4ad2-bbf8-42db080950df",
                "f3efc82e-813f-4035-9e80-6616893bdfc1"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5138b36c-dfd6-4f33-b6d0-17496f02d711",
              "title": "Document Notifications",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should send notification when document is approved",
                  "fullTitle": "Document Workflow Document Notifications should send notification when document is approved",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', '**/api/notifications/document-approved', {\n    statusCode: 200,\n    body: { success: true }\n}).as('sendNotification');\n// Approve a document\ncy.visit('/documentos/revision');\ncy.waitForAngular();\ncy.get('[data-cy=\"review-doc\"]').first().find('[data-cy=\"approve-button\"]').click();\ncy.get('[data-cy=\"approval-notes\"]').type('Documento aprobado');\ncy.get('[data-cy=\"confirm-approval\"]').click();\n// Should trigger notification\ncy.wait('@sendNotification');",
                  "err": {},
                  "uuid": "e1324396-c1f8-40ff-83d2-bcf22d513718",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should notify client of missing documents",
                  "fullTitle": "Document Workflow Document Notifications should notify client of missing documents",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', '**/api/clients/client-001/notify-missing-docs', {\n    statusCode: 200,\n    body: { success: true, notificationsSent: 2 }\n}).as('notifyMissingDocs');\ncy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.get('[data-cy=\"notify-missing\"]').click();\ncy.get('[data-cy=\"notification-modal\"]').should('be.visible');\ncy.get('[data-cy=\"notification-method\"]').check(['email', 'sms']);\ncy.get('[data-cy=\"custom-message\"]').type('Recordatorio: Faltan documentos por subir');\ncy.get('[data-cy=\"send-notification\"]').click();\ncy.wait('@notifyMissingDocs');\ncy.verifyToast('Notificaciones enviadas', 'success');",
                  "err": {},
                  "uuid": "516fda61-2474-4a5a-b1d7-e735a2075f60",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "e1324396-c1f8-40ff-83d2-bcf22d513718",
                "516fda61-2474-4a5a-b1d7-e735a2075f60"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7034fdc8-2290-4273-aacb-4202a68be106",
              "title": "OCR and Document Processing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should extract data from uploaded document using OCR",
                  "fullTitle": "Document Workflow OCR and Document Processing should extract data from uploaded document using OCR",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', '**/api/documents/ocr-extract', {\n    statusCode: 200,\n    body: {\n        success: true,\n        extractedData: {\n            name: 'JUAN PEREZ GARCIA',\n            curp: 'PEGJ850315HDFRZN03',\n            address: 'AV INSURGENTES 123, COL CENTRO',\n            expirationDate: '2029-03-15'\n        }\n    }\n}).as('ocrExtract');\ncy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.get('[data-cy=\"doc-ine\"]').find('[data-cy=\"extract-data\"]').click();\ncy.wait('@ocrExtract');\n// Verify extracted data modal\ncy.get('[data-cy=\"ocr-results\"]').should('be.visible');\ncy.get('[data-cy=\"extracted-name\"]').should('contain', 'JUAN PEREZ GARCIA');\ncy.get('[data-cy=\"extracted-curp\"]').should('contain', 'PEGJ850315HDFRZN03');\n// Confirm extracted data\ncy.get('[data-cy=\"confirm-extraction\"]').click();\ncy.verifyToast('Datos extraídos exitosamente', 'success');",
                  "err": {},
                  "uuid": "243a3b92-3e1b-4c44-8daa-629ce564fa45",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should handle OCR processing errors",
                  "fullTitle": "Document Workflow OCR and Document Processing should handle OCR processing errors",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', '**/api/documents/ocr-extract', {\n    statusCode: 422,\n    body: {\n        error: 'No se pudo procesar la imagen. La calidad es muy baja.'\n    }\n}).as('ocrError');\ncy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.get('[data-cy=\"doc-ine\"]').find('[data-cy=\"extract-data\"]').click();\ncy.wait('@ocrError');\ncy.get('[data-cy=\"ocr-error\"]').should('be.visible');\ncy.contains('No se pudo procesar la imagen').should('be.visible');",
                  "err": {},
                  "uuid": "b1a7b4eb-50a2-4b23-a98b-d3936cc9129e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "243a3b92-3e1b-4c44-8daa-629ce564fa45",
                "b1a7b4eb-50a2-4b23-a98b-d3936cc9129e"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c3a2f975-8c07-46d8-bfca-9a8527f66784",
              "title": "Performance and Accessibility",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load documents page within acceptable time",
                  "fullTitle": "Document Workflow Performance and Accessibility should load documents page within acceptable time",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const start = Date.now();\ncy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.then(() => {\n    const loadTime = Date.now() - start;\n    expect(loadTime).to.be.lessThan(2000);\n});",
                  "err": {},
                  "uuid": "d9fb019c-b203-4637-9ee2-61c8f7009b4b",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should be fully accessible",
                  "fullTitle": "Document Workflow Performance and Accessibility should be fully accessible",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.checkA11y();\n// Test upload modal accessibility\ncy.get('[data-cy=\"doc-domicilio\"]').find('[data-cy=\"upload-button\"]').click();\ncy.checkA11y('[data-cy=\"upload-modal\"]');",
                  "err": {},
                  "uuid": "1b14b675-e52f-4541-b6d0-7d08749b020e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should support keyboard navigation",
                  "fullTitle": "Document Workflow Performance and Accessibility should support keyboard navigation",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\n// Test tab navigation\ncy.get('body').tab();\ncy.focused().should('be.visible');\n// Navigate through document cards\nfor (let i = 0; i < 5; i++) {\n    cy.focused().tab();\n    cy.focused().should('be.visible');\n}\n// Test Enter key on upload button\ncy.get('[data-cy=\"upload-button\"]').first().focus().type('{enter}');\ncy.get('[data-cy=\"upload-modal\"]').should('be.visible');\n// Test Escape key to close modal\ncy.get('body').type('{esc}');\ncy.get('[data-cy=\"upload-modal\"]').should('not.exist');",
                  "err": {},
                  "uuid": "3fe91503-d5db-4c6f-9620-d4516e9f377c",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "should handle large file uploads efficiently",
                  "fullTitle": "Document Workflow Performance and Accessibility should handle large file uploads efficiently",
                  "timedOut": null,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Mock large file upload with progress tracking\ncy.intercept('POST', '**/api/clients/client-001/documents/upload', (req) => {\n    // Simulate processing time based on file size\n    const delay = req.body.size > 5000000 ? 5000 : 1000;\n    req.reply((res) => {\n        res.delay(delay);\n        res.send({\n            statusCode: 200,\n            body: { success: true }\n        });\n    });\n}).as('uploadLargeFile');\ncy.visit('/clientes/client-001/documentos');\ncy.waitForAngular();\ncy.wait('@getClientDocuments');\ncy.get('[data-cy=\"doc-domicilio\"]').find('[data-cy=\"upload-button\"]').click();\n// Upload large file\nconst largeFileName = 'large-document.pdf';\ncy.fixture(largeFileName, 'binary')\n    .then(Cypress.Blob.binaryStringToBlob)\n    .then(fileContent => {\n    cy.get('[data-cy=\"file-input\"]').selectFile({\n        contents: fileContent,\n        fileName: largeFileName,\n        mimeType: 'application/pdf'\n    });\n});\ncy.get('[data-cy=\"upload-submit\"]').click();\n// Should show progress indicators for large files\ncy.get('[data-cy=\"upload-progress\"]').should('be.visible');\ncy.get('[data-cy=\"progress-bar\"]').should('be.visible');\ncy.wait('@uploadLargeFile', { timeout: 10000 });",
                  "err": {
                    "message": "CypressError: `cy.task('coverageReport')` failed with the following error:\n\n> Command failed with exit code 1: npm run coverage:report\n\nhttps://on.cypress.io/api/task\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail",
                    "estack": "CypressError: `cy.task('coverageReport')` failed with the following error:\n\n> Command failed with exit code 1: npm run coverage:report\n\nhttps://on.cypress.io/api/task\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail\n    at <unknown> (http://localhost:4200/__cypress/runner/cypress_runner.js:138627:70)\n    at tryCatcher (http://localhost:4200/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:4200/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:4200/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:4200/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:4200/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (http://localhost:4200/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:4200/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:4200/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.generateReport (webpack://conductores-pwa/./node_modules/@cypress/code-coverage/support.js:263:0)\n\nFrom Node.js Internals:\n  Error: Command failed with exit code 1: npm run coverage:report\n      at makeError (/workspace/node_modules/@cypress/code-coverage/node_modules/execa/lib/error.js:59:11)\n      at handlePromise (/workspace/node_modules/@cypress/code-coverage/node_modules/execa/index.js:114:26)\n      at process.processTicksAndRejections (node:internal/process/task_queues:105:5)",
                    "diff": null
                  },
                  "uuid": "a8a53902-0462-414d-9114-2148c9f523a9",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "a8a53902-0462-414d-9114-2148c9f523a9"
              ],
              "pending": [],
              "skipped": [
                "d9fb019c-b203-4637-9ee2-61c8f7009b4b",
                "1b14b675-e52f-4541-b6d0-7d08749b020e",
                "3fe91503-d5db-4c6f-9620-d4516e9f377c"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "charts": true,
        "reportPageTitle": "Conductores PWA E2E Tests",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "reportDir": "cypress/reports/html/.jsons",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}