name: 🧪 Prebuild QA Gates

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      test_level:
        description: 'Test Level'
        required: true
        default: 'quick'
        type: choice
        options:
        - quick
        - full

jobs:
  prebuild-qa:
    name: 🚦 Prebuild QA Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x]

    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🟢 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: |
        npm ci --legacy-peer-deps
        npx playwright install chromium

    - name: 🧹 Lint Check
      run: npm run lint

    - name: 🧪 Unit Tests
      run: npm run test:unit

    - name: 🔧 Services Tests
      run: npm run test:services

    - name: 🎭 E2E Tests (Chrome)
      run: |
        npm run serve:test &
        SERVER_PID=$!
        sleep 10
        npm run test:e2e:chrome || (kill $SERVER_PID && exit 1)
        kill $SERVER_PID

    - name: ♿ Accessibility Tests
      run: npm run test:accessibility

    - name: 🧬 Mutation Testing (Quick)
      run: npm run test:mutation:quick
      continue-on-error: true

    - name: 🎯 Quality Gates Validation
      run: npm run quality:gates

    - name: 📊 Generate Quality Report
      if: always()
      run: npm run quality:report

    - name: 📤 Upload Quality Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: quality-reports-${{ github.sha }}
        path: |
          reports/
          coverage/
        retention-days: 7

    - name: ✅ Build Validation (if QA passes)
      if: success()
      run: |
        echo "🚀 QA Gates PASSED - Build authorized"
        npm run build:prod

    - name: ❌ QA Gates Failed
      if: failure()
      run: |
        echo "🚫 QA Gates FAILED - Build blocked"
        echo "Review quality reports in artifacts"
        exit 1

  prebuild-qa-full:
    name: 🔬 Full QA Validation
    runs-on: ubuntu-latest
    if: github.event.inputs.test_level == 'full' || (github.event_name == 'push' && github.ref == 'refs/heads/main')

    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: |
        npm ci --legacy-peer-deps
        npx playwright install

    - name: 🧪 Full QA Suite
      run: npm run prebuild:qa:full

    - name: 📤 Upload Comprehensive Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: full-qa-reports-${{ github.sha }}
        path: |
          reports/
          coverage/
          test-results/
        retention-days: 14

  summary:
    name: 📋 QA Summary
    runs-on: ubuntu-latest
    needs: [prebuild-qa]
    if: always()

    steps:
    - name: 📊 QA Results Summary
      run: |
        if [[ "${{ needs.prebuild-qa.result }}" == "success" ]]; then
          echo "✅ QA GATES PASSED - Ready for build"
          echo "- Linting: ✅"
          echo "- Unit Tests: ✅"
          echo "- Services Tests: ✅"
          echo "- E2E Tests: ✅"
          echo "- Accessibility: ✅"
          echo "- Mutation Testing: ✅"
          echo "- Quality Gates: ✅"
          echo ""
          echo "🚀 BUILD AUTHORIZED"
        else
          echo "❌ QA GATES FAILED"
          echo "Build is blocked until issues are resolved"
          exit 1
        fi