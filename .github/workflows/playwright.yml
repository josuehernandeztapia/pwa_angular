name: Visual Tests (Playwright)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  visual:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build (production)
        run: npm run build:prod

      - name: Start static server
        run: npx http-server dist/conductores-pwa -p 4200 &

      - name: Wait for server
        run: npx wait-on http://localhost:4200

      - name: Run Playwright tests (visual)
        run: npm run test:visual:all

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: ignore

      - name: Run Lighthouse (PWA/Perf)
        run: npm run test:perf:lighthouse

      - name: Save Lighthouse JSONs
        if: always()
        run: |
          mkdir -p lighthouse-reports
          cp ./.lighthouseci/*.json ./lighthouse-reports/ || true

      - name: Run Axe (accessibility) on built site
        run: npm run test:a11y || true

      - name: Generate PWA checklist
        run: npm run test:perf:pwa:checklist

      - name: Merge coverage for gates
        run: |
          mkdir -p coverage/merged
          if [ -f coverage/conductores-pwa/lcov.info ]; then cp coverage/conductores-pwa/lcov.info coverage/merged/lcov.info; fi

      - name: Enforce Quality Gates
        env:
          MINIMUM_COVERAGE: '90'
          MAX_LIGHTHOUSE_SCORE: '90'
          MAX_ACCESSIBILITY_VIOLATIONS: '0'
          MAX_BUNDLE_SIZE: '5242880'
        run: node scripts/quality-gates.js

      - name: Upload Lighthouse reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-reports
          path: lighthouse-reports
          if-no-files-found: ignore

      - name: Upload Accessibility reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-reports
          path: reports/accessibility
          if-no-files-found: ignore

      - name: Upload Coverage (merged)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage
          if-no-files-found: ignore

      - name: Upload PWA checklist
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pwa-checklist
          path: reports/pwa
          if-no-files-found: ignore

